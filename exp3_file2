			
rm(list=ls())

DIR<-"C:/Users/and2/Documents/Score de Cheques/Datos Nuevos"
DIR2<-"C:/Users/and2/Documents/Score de Cheques/Datos Nuevos/Sanity_Check.RData"
setwd(DIR)
load(DIR2)
source("//clentb.eis.equifax.com/desarrollo modelos/Paraguay/Archivos R scoring/tbl_performance.r")  
source("//clentb.eis.equifax.com/desarrollo modelos/Paraguay/Archivos R scoring/tbl_performance_PON.r")  
library(Hmisc)
source("//clentb.eis.equifax.com/desarrollo modelos/Paraguay/Archivos R scoring/iv_gain.r") 
dim(datos) # 99654 450
table(datos$TARGET)
  # 0     1 
# 49827 49827 

  
##### Reglas de Rechazo #########
datos$clean<-ifelse((datos$inf_dem_cant_abiertas==0 & datos$inf_conv_cant_abiertas==0 & datos$inf_inhib_cant_abiertas==0 & datos$inf_qui_cant_abiertas==0 & datos$inf_rem_cant_abiertas==0 & datos$inf_inc_cant_abiertas==0 & datos$inf_mor_cant_abiertas==0),1,0)
#inconf_morce_cant_dist_afi
datos$inf_dem_cant_abiertas<-NULL 
datos$inf_conv_cant_abiertas<-NULL
datos$inf_inhib_cant_abiertas<-NULL
datos$inf_qui_cant_abiertas<-NULL
datos$inf_rem_cant_abiertas<-NULL
datos$inf_inc_cant_abiertas<-NULL
datos$inf_mor_cant_abiertas<-NULL

##### Elimino variables que no voy a usar#######
datos$CH_RE_MONTO_GS<-NULL
datos$CH_RE_MONTO_GIRO_GS<-NULL
datos$CH_RE_MONTO_I_FOND_GS<-NULL
datos$CH_RE_MONTO_DEF_F_GS<-NULL
datos$CH_RE_MONTO_OT_MON<-NULL
datos$CH_RE_MONTO_GIRO_OT_MON<-NULL
datos$CH_RE_MONTO_I_FOND_OT_MON<-NULL
datos$CH_RE_MONTO_DEF_F_OT_MON<-NULL
datos$CH_RE_MAX_MONTO_GS<-NULL
datos$CH_RE_MAX_MONTO_GIRO_GS<-NULL
datos$CH_RE_MAX_MONTO_I_FOND_GS<-NULL
datos$CH_RE_MAX_MONTO_DEF_F_GS<-NULL
datos$CH_RE_MAX_MONTO_OT_MON<-NULL
datos$CH_RE_MAX_MONTO_GIRO_OT_MON<-NULL
datos$CH_RE_MAX_MONTO_I_FOND_OT_MON<-NULL
datos$CH_RE_MAX_MONTO_DEF_F_OT_MON<-NULL
datos$CH_RE_MIN_MONTO_GS<-NULL
datos$CH_RE_MIN_MONTO_GIRO_GS<-NULL
datos$CH_RE_MIN_MONTO_I_FOND_GS<-NULL
datos$CH_RE_MIN_MONTO_DEF_F_GS<-NULL
datos$CH_RE_MIN_MONTO_OT_MON<-NULL
datos$CH_RE_MIN_MONTO_GIRO_OT_MON<-NULL
datos$CH_RE_MIN_MONTO_I_FOND_OT_MON<-NULL
datos$CH_RE_MIN_MONTO_DEF_F_OT_MON<-NULL
datos$CH_RE_AVG_MONTO_GS<-NULL
datos$CH_RE_AVG_MONTO_GIRO_GS<-NULL
datos$CH_RE_AVG_MONTO_I_FOND_GS<-NULL
datos$CH_RE_AVG_MONTO_DEF_F_GS<-NULL
datos$CH_RE_AVG_MONTO_OT_MON<-NULL
datos$CH_RE_AVG_MONTO_GIRO_OT_MON<-NULL
datos$CH_RE_AVG_MONTO_I_FOND_OT_MON<-NULL
datos$CH_RE_AVG_MONTO_DEF_F_OT_MON<-NULL
datos$CH_RE_MONTO_TOT_ARB<-NULL
datos$CH_RE_MONTO_GIRO_ARB<-NULL
datos$CH_RE_MONTO_I_FOND_ARB<-NULL
datos$CH_RE_MONTO_DEF_F_ARB<-NULL
datos$CH_RE_MAX_MONTO_ARB<-NULL
datos$CH_RE_MAX_MONTO_GIRO_ARB<-NULL
datos$CH_RE_MAX_MONTO_I_FOND_ARB<-NULL
datos$CH_RE_MAX_MONTO_DEF_F_ARB<-NULL
datos$CH_RE_MIN_MONTO_ARB<-NULL
datos$CH_RE_MIN_MONTO_GIRO_ARB<-NULL
datos$CH_RE_MIN_MONTO_I_FOND_ARB<-NULL
datos$CH_RE_MIN_MONTO_DEF_F_ARB<-NULL
datos$CH_RE_AVG_MONTO_TOT_ARB<-NULL
datos$CH_RE_AVG_MONTO_GIRO_ARB<-NULL
datos$CH_RE_AVG_MONTO_I_FOND_ARB<-NULL
datos$CH_RE_AVG_MONTO_DEF_F_ARB<-NULL
datos$CH_RE_H_MONTO_GS<-NULL
datos$CH_RE_H_MONTO_GIRO_GS<-NULL
datos$CH_RE_H_MONTO_I_FON_GS<-NULL
datos$CH_RE_H_MONTO_DEF_F_GS<-NULL
datos$CH_RE_H_MONTO_OT_MON<-NULL
datos$CH_RE_H_MONTO_GIRO_OT_MON<-NULL
datos$CH_RE_H_MONTO_I_FON_OT_MON<-NULL
datos$CH_RE_H_MONTO_DEF_F_OT_MON<-NULL
datos$CH_RE_H_MAX_MONTO_GS<-NULL
datos$CH_RE_H_MAX_MONTO_GIRO_GS<-NULL
datos$CH_RE_H_MAX_MONTO_I_FON_GS<-NULL
datos$CH_RE_H_MAX_MONTO_DEF_F_GS<-NULL
datos$CH_RE_H_MAX_MONTO_OT_MON<-NULL
datos$CH_RE_H_MAX_MONTO_GIRO_OT_MON<-NULL
datos$CH_RE_H_MAX_MONTO_I_FON_OT_MON<-NULL
datos$CH_RE_H_MAX_MONTO_DEF_F_OT_MON<-NULL
datos$CH_RE_H_MIN_MONTO_GS<-NULL
datos$CH_RE_H_MIN_MONTO_GIRO_GS<-NULL
datos$CH_RE_H_MIN_MONTO_I_FON_GS<-NULL
datos$CH_RE_H_MIN_MONTO_DEF_F_GS<-NULL
datos$CH_RE_H_MIN_MONTO_OT_MON<-NULL
datos$CH_RE_H_MIN_MONTO_GIRO_OT_MON<-NULL
datos$CH_RE_H_MIN_MONTO_I_FON_OT_MON<-NULL
datos$CH_RE_H_MIN_MONTO_DEF_F_OT_MON<-NULL
datos$CH_RE_H_AVG_MONTO_GS<-NULL
datos$CH_RE_H_AVG_MONTO_GIRO_GS<-NULL
datos$CH_RE_H_AVG_MONTO_I_FON_GS<-NULL
datos$CH_RE_H_AVG_MONTO_DEF_F_GS<-NULL
datos$CH_RE_H_AVG_MONTO_OT_MON<-NULL
datos$CH_RE_H_AVG_MONTO_GIRO_OT_MON<-NULL
datos$CH_RE_H_AVG_MONTO_I_FON_OT_MON<-NULL
datos$CH_RE_H_AVG_MONTO_DEF_F_OT_MON<-NULL
datos$CH_RE_H_MONTO_TOT_ARB<-NULL
datos$CH_RE_H_MONTO_GIRO_ARB<-NULL
datos$CH_RE_H_MONTO_I_FON_ARB<-NULL
datos$CH_RE_H_MONTO_DEF_F_ARB<-NULL
datos$CH_RE_H_MAX_MONTO_ARB<-NULL
datos$CH_RE_H_MAX_MONTO_GIRO_ARB<-NULL
datos$CH_RE_H_MAX_MONTO_I_FON_ARB<-NULL
datos$CH_RE_H_MAX_MONTO_DEF_F_ARB<-NULL
datos$CH_RE_H_MIN_MONTO_ARB<-NULL
datos$CH_RE_H_MIN_MONTO_GIRO_ARB<-NULL
datos$CH_RE_H_MIN_MONTO_I_FON_ARB<-NULL
datos$CH_RE_H_MIN_MONTO_DEF_F_ARB<-NULL
datos$CH_RE_H_AVG_MONTO_TOT_ARB<-NULL
datos$CH_RE_H_AVG_MONTO_GIRO_ARB<-NULL
datos$CH_RE_H_AVG_MONTO_I_FON_ARB<-NULL
datos$CH_RE_H_AVG_MONTO_DEF_F_ARB<-NULL



for(i in 1:dim(datos)[2]) # para ver quÃ© clase le adjudicÃ³ el r a cada variable
{a <- c(class(datos[,i]),names(datos)[i],i)
print.table(a)}
  
  
vec <- c(7,10:57,93:129,133,137:139,143:145,158:162,166:198,201:274,281:347) 
  
for(i in vec) {datos[,i] <- ifelse(datos[,i]> 7*sd(datos[,i],na.rm=T),round(7*sd(datos[,i],na.rm=T)),datos[,i])}

# eliminaciÃ³n de atributos constantes 

datos_num <- NULL
for(i in 1:dim(datos)[2]) {if(is.numeric(datos[,i]) | is.integer(datos[,i])) datos_num[i] <- min(datos[,i],na.rm=T)!=max(datos[,i],na.rm=T); NULL}
datos_num[is.na(datos_num)] <- TRUE

datos <- datos[,datos_num]

dim(datos)  #99654   302

#quedan 302 variables


##################################
### Modelizacion en desarrollo ###
##################################

##--------------------------Saco muestra de tesing----------------------------------------------------------

### Partir la muestra en dos: Desarrollo y Testing.
set.seed(dim(datos)[1])
datos$rand <- runif(dim(datos)[1])    
    # dim(datos)[1] es el nÃºmero de observaciones para generar la variable uniforme
    # if length(n) > 1, the length is taken to be the number required.

datosclean<-datos[datos$clean==1 & datos$CH_RE_I_FOND_U6M<1,]
datosclean$clean<-NULL	
datosclean$CH_RE_I_FOND_U6M<-NULL

datoscleansr<-datos[datos$clean==1,]
datoscleansr$clean<-NULL	

datosc30<-datos[datos$clean==1 & datos$inconf_morce_cant_dist_afi==0 & datos$CH_RE_I_FOND_U6M<1,]	
datosc30$clean<-NULL	
datosc30$CH_RE_I_FOND_U6M<-NULL
datosc30$inconf_morce_cant_dist_afi<-NULL

datosc30sr<-datos[datos$clean==1 & datos$inconf_morce_cant_dist_afi==0,]	
datosc30sr$clean<-NULL	
datosc30sr$inconf_morce_cant_dist_afi<-NULL

datosCom<-datos[datos$clean==1,c(1:104,303)]


########################
## AnÃ¡lisis bivariado ##
########################

# evaluaciÃ³n univariada de poder predictivo de atributos
#  Datos clean
source("//clentb.eis.equifax.com/desarrollo modelos/Paraguay/Archivos R scoring/iv_gain_PON.r") 
sink("iv_gain_clean.txt")                                            
iv_gain_PON(datosclean,exclude=c(1,2,4:6,111,114,115,120,121,125:136,142:144,177,178,242:247,301),pos=3,pm=2)  
sink()
var_ratios <- read.table("iv_gain_clean.txt") 
var_ratios

datosclean_bi <- datosclean[,c("TARGET", "rand",rownames(var_ratios[var_ratios[,1]>0.02,]))]
dim(datosclean_bi)

# Quedaron 215 variables. dim 75102   215
#### tablas bivariadas ###

sink("bivariadoclean.txt")
sapply(datosclean_bi[datosclean_bi$rand<=0.5,], function(x) {
		if(is.factor(x)) {report_cat_PON(x,datosclean_bi$TARGET[datosclean_bi$rand<=0.5],pm=2)} else {
		report_cont_PON(x,datosclean_bi$TARGET[datosclean_bi$rand<=0.5],pm=2) }
		} )
sink()



#  Datos clean sin rechazo por cheques rechazado

sink("iv_gain_clean_sr.txt")                                            
iv_gain_PON(datoscleansr,exclude=c(1,2,4:6,111,114,115,120,121,125:136,142:144,178,179,243:248,302),pos=3,pm=2)  
sink()
var_ratios <- read.table("iv_gain_clean_sr.txt") 
var_ratios

datoscleansr_bi <- datoscleansr[,c("TARGET", "rand",rownames(var_ratios[var_ratios[,1]>0.02,]))]
dim(datoscleansr_bi)

# Quedaron 228 variables. dim 86399  228
#### tablas bivariadas ###

sink("bivariadocleansr.txt")
sapply(datoscleansr_bi[datoscleansr_bi$rand<=0.5,], function(x) {
		if(is.factor(x)) {report_cat_PON(x,datoscleansr_bi$TARGET[datoscleansr_bi$rand<=0.5],pm=2)} else {
		report_cont_PON(x,datoscleansr_bi$TARGET[datoscleansr_bi$rand<=0.5],pm=2) }
		} )
sink()



#  Datos C30

sink("iv_gain_c30.txt")                                            
iv_gain_PON(datosc30,exclude=c(1,2,4:6,110,113,114,119,120,124:135,141:143,176,177,241:246,300),pos=3,pm=2)  
sink()
var_ratios <- read.table("iv_gain_c30.txt") 
var_ratios

datosc30_bi <- datosc30[,c("TARGET", "rand",rownames(var_ratios[var_ratios[,1]>0.02,]))]
dim(datosc30_bi)

# Quedaron 213 variables. dim 71268   213
#### tablas bivariadas ###

sink("bivariadoc30.txt")
sapply(datosc30_bi[datosc30_bi$rand<=0.5,], function(x) {
		if(is.factor(x)) {report_cat_PON(x,datosc30_bi$TARGET[datosc30_bi$rand<=0.5],pm=2)} else {
		report_cont_PON(x,datosc30_bi$TARGET[datosc30_bi$rand<=0.5],pm=2) }
		} )
sink()





#  Datos C30 sin rechazo por cheques rechazado

sink("iv_gain_c30_sr.txt")                                            
iv_gain_PON(datosc30sr,exclude=c(1,2,4:6,110,113,114,119,120,124:135,141:143,177,178,242:247,301),pos=3,pm=2)  
sink()
var_ratios <- read.table("iv_gain_c30_sr.txt") 
var_ratios

datosc30sr_bi <- datosc30sr[,c("TARGET", "rand",rownames(var_ratios[var_ratios[,1]>0.02,]))]
dim(datosc30sr_bi)

# Quedaron 223 variables. dim 79776  223
#### tablas bivariadas ###

sink("bivariadoc30sr.txt")
sapply(datosc30sr_bi[datosc30sr_bi$rand<=0.5,], function(x) {
		if(is.factor(x)) {report_cat_PON(x,datosc30sr_bi$TARGET[datosc30sr_bi$rand<=0.5],pm=2)} else {
		report_cont_PON(x,datosc30sr_bi$TARGET[datosc30sr_bi$rand<=0.5],pm=2) }
		} )
sink()




#  Datos Comercios

sink("iv_gain_Com.txt")                                            
iv_gain_PON(datosCom,exclude=c(1,2,4:6,105),pos=3,pm=2)  
sink()
var_ratios <- read.table("iv_gain_Com.txt") 
var_ratios

datosCom_bi <- datosCom[,c("TARGET", "rand",rownames(var_ratios[var_ratios[,1]>0.02,]))]
dim(datosCom_bi)

# Quedaron 67 variables. dim 86399  67
#### tablas bivariadas ###

sink("bivariadoCom.txt")
sapply(datosCom_bi[datosCom_bi$rand<=0.5,], function(x) {
		if(is.factor(x)) {report_cat_PON(x,datosCom_bi$TARGET[datosCom_bi$rand<=0.5],pm=2)} else {
		report_cont_PON(x,datosCom_bi$TARGET[datosCom_bi$rand<=0.5],pm=2) }
		} )
sink()



DIR1<-"C:/Users/and2/Documents/Score de Cheques/Datos Nuevos/Analisis_Bivariado.RData"
save.image(DIR1)

